{"version":3,"file":"HMSGeofence.js","sourceRoot":"","sources":["../scripts/HMSGeofence.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,mCAAkC;AAGlC,SAAgB,IAAI;IAChB,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;AACvB,CAAC;AAFD,oBAEC;AAED,SAAgB,kBAAkB,CAAC,SAAqB,EAAE,eAAuB,EAAE,cAAsB;IACrG,OAAO,GAAG,CAAC,oBAAoB,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,cAAc,CAAC,CAAC,CAAC;AACnF,CAAC;AAFD,gDAEC;AAED,SAAgB,kBAAkB,CAAC,EAAU;IACzC,OAAO,GAAG,CAAC,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3C,CAAC;AAFD,gDAEC;AAED,EAAE;AACF,UAAU;AACV,EAAE;AAEF,SAAS,GAAG,CAAC,QAAgB,EAAE,OAAY,EAAE;IACzC,OAAO,iBAAS,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AACpD,CAAC;AAaD,EAAE;AACF,YAAY;AACZ,EAAE;AAEF,IAAY,wBAMX;AAND,WAAY,wBAAwB;IAChC,yGAAyB,CAAA;IACzB,uGAAwB,CAAA;IACxB,yGAAyB,CAAA;IACzB,2GAA0B,CAAA;IAC1B,2GAA0B,CAAA;AAC9B,CAAC,EANW,wBAAwB,GAAxB,gCAAwB,KAAxB,gCAAwB,QAMnC;AAED,IAAY,iBAKX;AALD,WAAY,iBAAiB;IACzB,mGAA6B,CAAA;IAC7B,iGAA4B,CAAA;IAC5B,mGAA6B,CAAA;IAC7B,4FAA0B,CAAA;AAC9B,CAAC,EALW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAK5B;AAED,IAAY,UAMX;AAND,WAAY,UAAU;IAClB,+EAA4B,CAAA;IAC5B,2FAAkC,CAAA;IAClC,yGAAyC,CAAA;IACzC,uGAAwC,CAAA;IACxC,2FAAkC,CAAA;AACtC,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB;AAED,IAAY,MAEX;AAFD,WAAY,MAAM;IACd,8CAAoC,CAAA;AACxC,CAAC,EAFW,MAAM,GAAN,cAAM,KAAN,cAAM,QAEjB","sourcesContent":["/**\n * Copyright 2020 Huawei Technologies Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {asyncExec} from './utils';\nimport {RequestCodeResult} from './CommonTypes';\n\nexport function init() {\n    return run('init');\n}\n\nexport function createGeofenceList(geofences: Geofence[], initConversions: number, coordinateType: number): Promise<RequestCodeResult> {\n    return run('createGeofenceList', [geofences, initConversions, coordinateType]);\n}\n\nexport function deleteGeofenceList(id: number): Promise<void> {\n    return run('deleteGeofenceList', [id]);\n}\n\n//\n// Helpers\n//\n\nfunction run(funcName: string, args: any[]=[]) {\n    return asyncExec('HMSGeofence', funcName, args);\n}\n\ninterface Geofence {\n    longitude: number,\n    latitude: number,\n    radius: number,\n    uniqueId: string,\n    conversions: number,\n    validContinueTime: number,\n    dwellDelayTime: number,\n    notificationInterval: number,\n}\n\n//\n// Constants\n//\n\nexport enum GeofenceRequestConstants {\n    ENTER_INIT_CONVERSION = 1,\n    EXIT_INIT_CONVERSION = 2,\n    DWELL_INIT_CONVERSION = 4,\n    COORDINATE_TYPE_WGS_84 = 1,\n    COORDINATE_TYPE_GCJ_02 = 0,\n}\n\nexport enum GeofenceConstants {\n    ENTER_GEOFENCE_CONVERSION = 1,\n    EXIT_GEOFENCE_CONVERSION = 2,\n    DWELL_GEOFENCE_CONVERSION = 4,\n    GEOFENCE_NEVER_EXPIRE = -1,\n}\n\nexport enum ErrorCodes {\n    GEOFENCE_UNAVAILABLE = 10200,\n    GEOFENCE_NUMBER_OVER_LIMIT = 10201,\n    GEOFENCE_PENDINGINTENT_OVER_LIMIT = 10202,\n    GEOFENCE_INSUFFICIENT_PERMISSION = 10204,\n    GEOFENCE_REQUEST_TOO_OFTEN = 10205,\n}\n\nexport enum Events {\n    GEOFENCE_RESULT = \"onGeofenceResult\"\n}\n"]}