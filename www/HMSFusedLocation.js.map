{"version":3,"file":"HMSFusedLocation.js","sourceRoot":"","sources":["../scripts/HMSFusedLocation.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,mCAAkC;AAGlC,SAAgB,IAAI;IAChB,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;AACvB,CAAC;AAFD,oBAEC;AAED,SAAgB,eAAe;IAC3B,OAAO,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAClC,CAAC;AAFD,0CAEC;AAED,SAAgB,cAAc;IAC1B,OAAO,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACjC,CAAC;AAFD,wCAEC;AAED,SAAgB,qBAAqB,CAAC,OAAgC;IAClE,OAAO,GAAG,CAAC,uBAAuB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AACnD,CAAC;AAFD,sDAEC;AAED,SAAgB,0BAA0B,CAAC,OAAwB;IAC/D,OAAO,GAAG,CAAC,4BAA4B,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AACxD,CAAC;AAFD,gEAEC;AAED,SAAgB,uBAAuB;IACnC,OAAO,GAAG,CAAC,yBAAyB,CAAC,CAAC;AAC1C,CAAC;AAFD,0DAEC;AAED,SAAgB,eAAe,CAAC,MAAc;IAC1C,OAAO,GAAG,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5C,CAAC;AAFD,0CAEC;AAED,SAAgB,WAAW,CAAC,IAAa;IACrC,OAAO,GAAG,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,CAAC;AAFD,kCAEC;AAED,SAAgB,sBAAsB,CAAC,OAAwB;IAC3D,OAAO,GAAG,CAAC,wBAAwB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AACpD,CAAC;AAFD,wDAEC;AAED,SAAgB,qBAAqB,CAAC,EAAU;IAC5C,OAAO,GAAG,CAAC,uBAAuB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,sDAEC;AAED,SAAgB,iBAAiB;IAC7B,OAAO,GAAG,CAAC,mBAAmB,CAAC,CAAC;AACpC,CAAC;AAFD,8CAEC;AAED,SAAgB,aAAa;IACzB,OAAO,GAAG,CAAC,eAAe,CAAC,CAAC;AAChC,CAAC;AAFD,sCAEC;AAED,EAAE;AACF,UAAU;AACV,EAAE;AAEF,SAAS,GAAG,CAAC,QAAgB,EAAE,OAAY,EAAE;IACzC,OAAO,iBAAS,CAAC,kBAAkB,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AACzD,CAAC;AA2FD,EAAE;AACF,YAAY;AACZ,EAAE;AACF,IAAY,iBAKX;AALD,WAAY,iBAAiB;IACzB,mHAAsC,CAAA;IACtC,+FAA4B,CAAA;IAC5B,uFAAwB,CAAA;IACxB,qFAAuB,CAAA;AAC3B,CAAC,EALW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAK5B;AAED,IAAY,MAEX;AAFD,WAAY,MAAM;IACd,8CAAoC,CAAA;AACxC,CAAC,EAFW,MAAM,GAAN,cAAM,KAAN,cAAM,QAEjB","sourcesContent":["/**\n * Copyright 2020 Huawei Technologies Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {asyncExec} from './utils';\nimport {HasPermissionResult} from './CommonTypes';\n\nexport function init() {\n    return run('init');\n}\n\nexport function getLastLocation(): Promise<Location> {\n    return run('getLastLocation');\n}\n\nexport function flushLocations(): Promise<void> {\n    return run('flushLocations');\n}\n\nexport function checkLocationSettings(request: LocationSettingsRequest): Promise<LocationSettingsStates> {\n    return run('checkLocationSettings', [request]);\n}\n\nexport function getLastLocationWithAddress(request: LocationRequest): Promise<HWLocation> {\n    return run('getLastLocationWithAddress', [request]);\n}\n\nexport function getLocationAvailability(): Promise<LocationAvailability> {\n    return run('getLocationAvailability');\n}\n\nexport function setMockLocation(latLng: LatLng): Promise<void> {\n    return run('setMockLocation', [latLng]);\n}\n\nexport function setMockMode(mode: boolean): Promise<void> {\n    return run('setMockMode', [mode]);\n}\n\nexport function requestLocationUpdates(request: LocationRequest): Promise<IdResult> {\n    return run('requestLocationUpdates', [request]);\n}\n\nexport function removeLocationUpdates(id: string): Promise<IdResult> {\n    return run('removeLocationUpdates', [id]);\n}\n\nexport function requestPermission(): Promise<LocationPermissionResult> {\n    return run('requestPermission');\n}\n\nexport function hasPermission(): Promise<HasPermissionResult> {\n    return run('hasPermission');\n}\n\n//\n// Helpers\n//\n\nfunction run(funcName: string, args: any[]=[]) {\n    return asyncExec('HMSFusedLocation', funcName, args);\n}\n\ninterface Location {\n    latitude: number,\n    longitude: number,\n    altitude: number,\n    speed: number,\n    bearing: number,\n    accuracy: number,\n    time: number,\n    fromMockProvider: boolean,\n    verticalAccuracyMeters: number,\n    bearingAccuracyDegrees: number,\n    speedAccuracyMetersPerSecond: number\n}\n\ninterface HWLocation {\n    latitude: number,\n    longitude: number,\n    altitude: number,\n    speed: number,\n    bearing: number,\n    accuracy: number,\n    provider: string,\n    time: number,\n    elapsedRealtimeNanos: number,\n    countryName: string,\n    state: string,\n    city: string,\n    county: string,\n    street: string,\n    featureName: string,\n    postalCode: string,\n    phone: string,\n    url: string,\n    extraInfo: string,\n    verticalAccuracyMeters: number,\n    bearingAccuracyDegrees: number,\n}\n\ninterface LocationSettingsStates {\n    isBlePresent: boolean\n    isBleUsable: boolean,\n    isGpsPresent: boolean,\n    isGpsUsable: boolean,\n    isLocationPresent: boolean,\n    isLocationUsable: boolean,\n    isNetworkLocationPresent: boolean,\n    isNetworkLocationUsable: boolean,\n}\n\ninterface LocationRequest {\n    priority: number,\n    interval: number,\n    numUpdates: number,\n    fastestInterval: number,\n    expirationTime: number,\n    expirationTimeDuration: number,\n    smallestDisplacement: number,\n    maxWaitTime: number,\n    needAddress: boolean,\n    language: string,\n    countryCode: string,\n}\n\ninterface LocationAvailability {\n    isLocationAvailable: boolean\n}\n\ninterface LocationSettingsRequest {\n    locationRequests: LocationRequest[],\n    needBle: boolean,\n    alwaysShow: boolean,\n}\n\ninterface LatLng {\n    longitude: number,\n    latitude: number\n}\n\ninterface IdResult {\n    id: string\n}\n\ninterface LocationPermissionResult {\n    granted: boolean,\n    fineLocation: boolean,\n    coarseLocation: boolean,\n    backgroundLocation?: boolean\n}\n\n//\n// Constants\n//\nexport enum PriorityConstants {\n    PRIORITY_BALANCED_POWER_ACCURACY = 102,\n    PRIORITY_HIGH_ACCURACY = 100,\n    PRIORITY_LOW_POWER = 104,\n    PRIORITY_NO_POWER = 105,\n}\n\nexport enum Events {\n    SCANNING_RESULT = \"onScanningResult\"\n}\n"]}